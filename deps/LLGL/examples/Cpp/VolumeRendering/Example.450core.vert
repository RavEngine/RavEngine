// GLSL Vertex Shader "VScene"
// Generated by XShaderCompiler
// 19/08/2019 20:23:04

#version 450 core

layout(location = 0) in vec3 position;
layout(location = 1) in vec3 normal;

layout(location = 0) out vec4 xsv_NDC0;
layout(location = 1) out vec4 xsv_WORLDPOS0;
layout(location = 2) out vec4 xsv_MODELPOS0;
layout(location = 3) out vec4 xsv_NORMAL0;

layout(std140, row_major, binding = 1) uniform Settings
{
    mat4  wMatrix;
    mat4  wMatrixInv;
    mat4  vpMatrix;
    mat4  vpMatrixInv;
    vec3  lightDir;
    float shininess;
    vec3  viewPos;
    float threshold;
    vec3  albedo;
    float reflectance;
};

void main()
{
    xsv_MODELPOS0 = vec4(position, 1);
    xsv_WORLDPOS0 = (xsv_MODELPOS0 * wMatrix);
    gl_Position = (xsv_WORLDPOS0 * vpMatrix);
    xsv_NDC0 = gl_Position / gl_Position.w;
    xsv_NORMAL0 = (vec4(normal, 0) * wMatrix);
}

