vertex_program Ogre/VR/HiddenAreaMeshVr_vs_GLSL glsl
{
	source HiddenAreaMeshVr_vs.glsl
}

vertex_program Ogre/VR/HiddenAreaMeshVr_vs_HLSL hlsl
{
	source HiddenAreaMeshVr_vs.hlsl
	entry_point main
	sets_vp_or_rt_array_index true
	target vs_5_0 vs_4_0 vs_4_0_level_9_1 vs_4_0_level_9_3
}

vertex_program Ogre/VR/HiddenAreaMeshVr_vs_Metal metal
{
	source HiddenAreaMeshVr_vs.metal
	shader_reflection_pair_hint Ogre/VR/HiddenAreaMeshVr_vs
}

vertex_program Ogre/VR/HiddenAreaMeshVr_vs unified
{
	delegate Ogre/VR/HiddenAreaMeshVr_vs_GLSL
	delegate Ogre/VR/HiddenAreaMeshVr_vs_HLSL
	delegate Ogre/VR/HiddenAreaMeshVr_vs_Metal

	default_params
	{
		param_named_auto	projectionMatrix	projection_matrix
		param_named_auto	rsDepthRange		rs_depth_range
	}
}

fragment_program Ogre/VR/HiddenAreaMeshVr_ps_GLSL glsl
{
	source HiddenAreaMeshVr_ps.glsl
}

fragment_program Ogre/VR/HiddenAreaMeshVr_ps_HLSL hlsl
{
	source HiddenAreaMeshVr_ps.hlsl
	entry_point main
	target ps_5_0 ps_4_0 ps_4_0_level_9_1 ps_4_0_level_9_3
}

fragment_program Ogre/VR/HiddenAreaMeshVr_ps_Metal metal
{
	source HiddenAreaMeshVr_ps.metal
	shader_reflection_pair_hint Ogre/VR/HiddenAreaMeshVr_vs
}

fragment_program Ogre/VR/HiddenAreaMeshVr_ps unified
{
	delegate Ogre/VR/HiddenAreaMeshVr_ps_GLSL
	delegate Ogre/VR/HiddenAreaMeshVr_ps_HLSL
	delegate Ogre/VR/HiddenAreaMeshVr_ps_Metal
}

material Ogre/VR/HiddenAreaMeshVr
{
	technique
	{
		pass
		{
			//depth_check off
			//depth_write off

			cull_hardware none

			depth_func always_pass

			//Do not write colour at all
			channel_mask 0

			vertex_program_ref Ogre/VR/HiddenAreaMeshVr_vs
			{
			}

			fragment_program_ref Ogre/VR/HiddenAreaMeshVr_ps
			{
			}
		}
	}
}
