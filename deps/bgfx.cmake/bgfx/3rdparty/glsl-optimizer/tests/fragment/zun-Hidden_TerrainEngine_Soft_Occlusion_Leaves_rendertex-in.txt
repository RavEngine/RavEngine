void xll_clip(float x) {
  if ( x<0.0 ) discard;
}
struct v2f_vertex_lit {
    vec2 uv;
    vec4 diff;
    vec4 spec;
};
struct v2f_img {
    vec4 pos;
    vec2 uv;
};
struct appdata_img {
    vec4 vertex;
    vec2 texcoord;
};
struct v2f {
    vec4 pos;
    float fog;
    vec4 uv;
    vec4 color;
};
struct appdata_tree {
    vec4 vertex;
    vec4 tangent;
    vec3 normal;
    vec4 color;
    vec4 texcoord;
};
uniform float _HalfOverCutoff;
uniform sampler2D _MainTex;
vec4 frag( in v2f xlat_var_input );
vec4 frag( in v2f xlat_var_input ) {
    vec4 col;
    col = texture2D( _MainTex, xlat_var_input.uv.xy );
    col.xyz  *= (2.00000 * xlat_var_input.color.xyz );
    col.w  *= (2.00000 * _HalfOverCutoff);
    xll_clip( (col.w  - 1.00000) );
    return col;
}
varying vec4 xlv_FOG;
void main() {
    vec4 xl_retval;
    v2f xlt_xlat_var_input;
    xlt_xlat_var_input.pos = vec4(0.0);
    xlt_xlat_var_input.fog = float( xlv_FOG);
    xlt_xlat_var_input.uv = vec4( gl_TexCoord[0]);
    xlt_xlat_var_input.color = vec4( gl_Color);
    xl_retval = frag( xlt_xlat_var_input);
    gl_FragData[0] = vec4( xl_retval);
}
