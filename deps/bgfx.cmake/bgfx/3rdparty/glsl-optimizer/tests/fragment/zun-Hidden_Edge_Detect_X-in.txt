struct v2f_vertex_lit {
    vec2 uv;
    vec4 diff;
    vec4 spec;
};
struct v2f_img {
    vec4 pos;
    vec2 uv;
};
struct appdata_img {
    vec4 vertex;
    vec2 texcoord;
};
struct v2f {
    vec4 pos;
    vec2 uv[3];
};
uniform sampler2D _MainTex;
uniform float _Treshold;
vec4 frag( in v2f i );
vec4 frag( in v2f i ) {
    vec4 original;
    vec3 p1;
    vec3 p2;
    vec3 p3;
    vec3 diff;
    float len;
    original = texture2D( _MainTex, i.uv[ 0 ]);
    p1 = original.xyz ;
    p2 = texture2D( _MainTex, i.uv[ 1 ]).xyz ;
    p3 = texture2D( _MainTex, i.uv[ 2 ]).xyz ;
    diff = (((p1 * 2.00000) - p2) - p3);
    len = dot( diff, diff);
    if ( (len >= _Treshold) ){
        original.xyz  = vec3( 0.000000);
    }
    return original;
}
void main() {
    vec4 xl_retval;
    v2f xlt_i;
    xlt_i.pos = vec4(0.0);
    xlt_i.uv[0] = vec2( gl_TexCoord[0]);
    xlt_i.uv[1] = vec2( gl_TexCoord[1]);
    xlt_i.uv[2] = vec2( gl_TexCoord[2]);
    xl_retval = frag( xlt_i);
    gl_FragData[0] = vec4( xl_retval);
}
