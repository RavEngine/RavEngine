
#include <phong_lighting.cg>
#include <fragment_entry.cg>

DECLARE_TEXTURE(diffuseTexture1)
DECLARE_TEXTURE(diffuseTexture2)
//DECLARE_TEXTURE(normalTexture)

CONST_TYPE float blendFactor;

SurfaceMaterial computeSurfaceMaterial(const FragmentParameters params)
{
	half4 diffuseTextureColor1 = (half4)tex2D(diffuseTexture1, params.texcoord0.xy);
	half4 diffuseTextureColor2 = (half4)tex2D(diffuseTexture2, params.texcoord0.xy);
	/*half2 nuvs = (half2)params.texcoord0.xy * 5;
	half4 normalTextureColor  = (half4)tex2D(normalTexture,  nuvs);*/
	
	SurfaceMaterial mout;
	mout.diffuseColor       = diffuseTextureColor1.rgb * (1.0 - (half)blendFactor) + diffuseTextureColor2.rgb * (half)blendFactor;
	mout.alpha              = 1;
	mout.emissiveColor      = 0;
	mout.specularColor      = half3(0.2,0.2,0.2); // TODO: make this a constant parameter set by the material.
	mout.specularPower      = 16;
	mout.tangentSpaceNormal = half3(0,0,1);
	/*mout.specularColor      = half3(normalTextureColor.a, normalTextureColor.a, normalTextureColor.a);
	mout.specularPower      = 16;
	mout.tangentSpaceNormal = (normalTextureColor.xyz-0.5) * 2.0;*/
	return mout;
}
